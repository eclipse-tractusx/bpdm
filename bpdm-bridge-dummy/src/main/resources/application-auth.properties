################################################################################
# Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################
##
# Security config (defined in common) for restricting access to the bridge dummy resource server
bpdm.security.enabled=true
bpdm.security.cors-origins=*
bpdm.bridge.syncAuthorities=sync_company_data
# OAuth configuration
bpdm.security.client-id=BPDM_BRIDGE_DUMMY
bpdm.security.realm=master
bpdm.security.auth-server-url=http://localhost:8180
bpdm.security.auth-url=${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}/protocol/openid-connect/auth
bpdm.security.token-url=${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}/protocol/openid-connect/token
bpdm.security.refresh-url=${bpdm.security.token-url}
# Spring security
spring.security.oauth2.resourceserver.jwt.issuer-uri=${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}/protocol/openid-connect/certs
##
# OAuth2 authorized connection to Pool and Gate client
bpdm.pool.security-enabled=true
bpdm.pool.oauth2-client-registration=bridge-client
bpdm.gate.security-enabled=true
bpdm.gate.oauth2-client-registration=bridge-client
## Note that the oauth2-client-registration properties is NOT the client id in Keycloak but references spring.security.oauth2.client.registration
# registration "bridge-client" - can be used for both pool and gate client
spring.security.oauth2.client.registration.bridge-client.client-id=${bpdm.security.client-id}
spring.security.oauth2.client.registration.bridge-client.client-secret=${bpdm.security.credentials.secret}
spring.security.oauth2.client.registration.bridge-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.bridge-client.provider=catena-keycloak-provider
spring.security.oauth2.client.provider.catena-keycloak-provider.issuer-uri=${bpdm.security.auth-server-url:http://localhost:8180}/realms/${bpdm.security.realm:master}
